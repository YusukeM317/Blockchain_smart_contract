name: Quality assessment
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  eslint:
    name: Lint with ESLint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Lint with ESLint
        run: npm run eslint

  solhint:
    name: Lint with Solhint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Lint with Solhint
        run: npm run solhint

  gas:
    name: Runs the gas estimator with the tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run the tests
        run: npm run test:gas
        env:
          COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}

  coverage:
    name: Compute the coverage with the tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run the tests in coverage mode
        run: npm run test:coverage
      - name: Send the coverage results to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
