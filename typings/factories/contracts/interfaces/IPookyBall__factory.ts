/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IPookyBall,
  IPookyBallInterface,
} from "../../../contracts/interfaces/IPookyBall";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "addPxpAmount",
        type: "uint256",
      },
    ],
    name: "addBallPxp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newLevel",
        type: "uint256",
      },
    ],
    name: "changeBallLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
    ],
    name: "getBallInfo",
    outputs: [
      {
        components: [
          {
            internalType: "enum BallRarity",
            name: "rarity",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomEntropy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pxp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revokableUntilTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct BallInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
    ],
    name: "getBallLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
    ],
    name: "getBallPxp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "enum BallRarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "revokableUntil",
        type: "uint256",
      },
    ],
    name: "mintWithRarityAndRevokableTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
    ],
    name: "revokeBall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_randomEntropy",
        type: "uint256",
      },
    ],
    name: "setRandomEntropy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPookyBall__factory {
  static readonly abi = _abi;
  static createInterface(): IPookyBallInterface {
    return new utils.Interface(_abi) as IPookyBallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPookyBall {
    return new Contract(address, _abi, signerOrProvider) as IPookyBall;
  }
}
