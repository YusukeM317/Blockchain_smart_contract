/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";

export type BallUpdatesStruct = {
  ballId: PromiseOrValue<BigNumberish>;
  addPxp: PromiseOrValue<BigNumberish>;
  toLevelUp: PromiseOrValue<boolean>;
};

export type BallUpdatesStructOutput = [BigNumber, BigNumber, boolean] & {
  ballId: BigNumber;
  addPxp: BigNumber;
  toLevelUp: boolean;
};

export type SignatureStruct = {
  _v: PromiseOrValue<BigNumberish>;
  _r: PromiseOrValue<BytesLike>;
  _s: PromiseOrValue<BytesLike>;
};

export type SignatureStructOutput = [number, string, string] & {
  _v: number;
  _r: string;
  _s: string;
};

export interface PookyGameInterface extends utils.Interface {
  functions: {
    "_setLevelCost()": FunctionFragment;
    "_setLevelPxpNeeded()": FunctionFragment;
    "_setMaxBallLevel()": FunctionFragment;
    "initialize()": FunctionFragment;
    "levelCost(uint256)": FunctionFragment;
    "levelPxpNeeded(uint256)": FunctionFragment;
    "levelUp(uint256)": FunctionFragment;
    "matchweekClaim(uint256,(uint256,uint256,bool)[],uint256,uint256,(uint8,bytes32,bytes32))": FunctionFragment;
    "owner()": FunctionFragment;
    "pookToken()": FunctionFragment;
    "pookyBall()": FunctionFragment;
    "pookySigner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setPookToken(address)": FunctionFragment;
    "setPookyBallContract(address)": FunctionFragment;
    "setPookySigner(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "_setLevelCost"
      | "_setLevelPxpNeeded"
      | "_setMaxBallLevel"
      | "initialize"
      | "levelCost"
      | "levelPxpNeeded"
      | "levelUp"
      | "matchweekClaim"
      | "owner"
      | "pookToken"
      | "pookyBall"
      | "pookySigner"
      | "renounceOwnership"
      | "setPookToken"
      | "setPookyBallContract"
      | "setPookySigner"
      | "transferOwnership"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "_setLevelCost",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_setLevelPxpNeeded",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_setMaxBallLevel",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "levelCost",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "levelPxpNeeded",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "levelUp",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "matchweekClaim",
    values: [
      PromiseOrValue<BigNumberish>,
      BallUpdatesStruct[],
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      SignatureStruct
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "pookToken", values?: undefined): string;
  encodeFunctionData(functionFragment: "pookyBall", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pookySigner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPookToken",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPookyBallContract",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPookySigner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "_setLevelCost",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setLevelPxpNeeded",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setMaxBallLevel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "levelCost", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "levelPxpNeeded",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "levelUp", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "matchweekClaim",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pookToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pookyBall", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pookySigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPookToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPookyBallContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPookySigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "Initialized(uint8)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface PookyGame extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PookyGameInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _setLevelCost(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    _setLevelPxpNeeded(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    _setMaxBallLevel(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    initialize(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    levelCost(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    levelPxpNeeded(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    levelUp(
      ballId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    matchweekClaim(
      pookAmount: PromiseOrValue<BigNumberish>,
      ballUpdates: BallUpdatesStruct[],
      ttl: PromiseOrValue<BigNumberish>,
      nonce: PromiseOrValue<BigNumberish>,
      sig: SignatureStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pookToken(overrides?: CallOverrides): Promise<[string]>;

    pookyBall(overrides?: CallOverrides): Promise<[string]>;

    pookySigner(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPookToken(
      _pookToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPookyBallContract(
      pookyBallAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPookySigner(
      _pookySigner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  _setLevelCost(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  _setLevelPxpNeeded(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  _setMaxBallLevel(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  initialize(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  levelCost(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  levelPxpNeeded(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  levelUp(
    ballId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  matchweekClaim(
    pookAmount: PromiseOrValue<BigNumberish>,
    ballUpdates: BallUpdatesStruct[],
    ttl: PromiseOrValue<BigNumberish>,
    nonce: PromiseOrValue<BigNumberish>,
    sig: SignatureStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  pookToken(overrides?: CallOverrides): Promise<string>;

  pookyBall(overrides?: CallOverrides): Promise<string>;

  pookySigner(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPookToken(
    _pookToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPookyBallContract(
    pookyBallAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPookySigner(
    _pookySigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    _setLevelCost(overrides?: CallOverrides): Promise<void>;

    _setLevelPxpNeeded(overrides?: CallOverrides): Promise<void>;

    _setMaxBallLevel(overrides?: CallOverrides): Promise<void>;

    initialize(overrides?: CallOverrides): Promise<void>;

    levelCost(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    levelPxpNeeded(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    levelUp(
      ballId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    matchweekClaim(
      pookAmount: PromiseOrValue<BigNumberish>,
      ballUpdates: BallUpdatesStruct[],
      ttl: PromiseOrValue<BigNumberish>,
      nonce: PromiseOrValue<BigNumberish>,
      sig: SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    pookToken(overrides?: CallOverrides): Promise<string>;

    pookyBall(overrides?: CallOverrides): Promise<string>;

    pookySigner(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setPookToken(
      _pookToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPookyBallContract(
      pookyBallAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPookySigner(
      _pookySigner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    _setLevelCost(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    _setLevelPxpNeeded(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    _setMaxBallLevel(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    initialize(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    levelCost(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    levelPxpNeeded(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    levelUp(
      ballId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    matchweekClaim(
      pookAmount: PromiseOrValue<BigNumberish>,
      ballUpdates: BallUpdatesStruct[],
      ttl: PromiseOrValue<BigNumberish>,
      nonce: PromiseOrValue<BigNumberish>,
      sig: SignatureStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pookToken(overrides?: CallOverrides): Promise<BigNumber>;

    pookyBall(overrides?: CallOverrides): Promise<BigNumber>;

    pookySigner(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPookToken(
      _pookToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPookyBallContract(
      pookyBallAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPookySigner(
      _pookySigner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _setLevelCost(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    _setLevelPxpNeeded(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    _setMaxBallLevel(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    initialize(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    levelCost(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    levelPxpNeeded(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    levelUp(
      ballId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    matchweekClaim(
      pookAmount: PromiseOrValue<BigNumberish>,
      ballUpdates: BallUpdatesStruct[],
      ttl: PromiseOrValue<BigNumberish>,
      nonce: PromiseOrValue<BigNumberish>,
      sig: SignatureStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pookToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pookyBall(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pookySigner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPookToken(
      _pookToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPookyBallContract(
      pookyBallAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPookySigner(
      _pookySigner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
