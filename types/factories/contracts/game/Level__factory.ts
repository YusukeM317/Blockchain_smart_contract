/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Level, LevelInterface } from "../../../contracts/game/Level";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPOK",
        name: "_pok",
        type: "address",
      },
      {
        internalType: "contract IPookyball",
        name: "_pookyball",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "InsufficientPOKBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLevel",
        type: "uint256",
      },
    ],
    name: "MaximumLevelReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
      {
        internalType: "address",
        name: "actual",
        type: "address",
      },
    ],
    name: "OwnershipRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "PXP_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PXP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATIO_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATIO_POK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATIO_PXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "levelPOK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levels",
        type: "uint256",
      },
    ],
    name: "levelPOKCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "levelPXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levels",
        type: "uint256",
      },
    ],
    name: "levelUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PookyballRarity",
        name: "",
        type: "uint8",
      },
    ],
    name: "maxLevels",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pok",
    outputs: [
      {
        internalType: "contract IPOK",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pookyball",
    outputs: [
      {
        internalType: "contract IPookyball",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001e6338038062001e6383398181016040528101906200003791906200039a565b6200005367b916d7f8388b16a660c01b620002d460201b60201c565b6200006f6747288e3a6aded77d60c01b620002d460201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000bf67ad188a8846a70f9d60c01b620002d460201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200010f670830eaf0e5bc9c6a60c01b620002d460201b60201c565b60286000808060048111156200012a5762000129620003e1565b5b60048111156200013f576200013e620003e1565b5b8152602001908152602001600020819055506200016d67abe06a342944f8e360c01b620002d460201b60201c565b603c60008060016004811115620001895762000188620003e1565b5b60048111156200019e576200019d620003e1565b5b815260200190815260200160002081905550620001cc6735a7226d76b41ee460c01b620002d460201b60201c565b605060008060036004811115620001e857620001e7620003e1565b5b6004811115620001fd57620001fc620003e1565b5b8152602001908152602001600020819055506200022b679638aaa5a92762e860c01b620002d460201b60201c565b606460008060026004811115620002475762000246620003e1565b5b60048111156200025c576200025b620003e1565b5b8152602001908152602001600020819055506200028a6724492b91142f578e60c01b620002d460201b60201c565b6064600080600480811115620002a557620002a4620003e1565b5b6004811115620002ba57620002b9620003e1565b5b815260200190815260200160002081905550505062000410565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030982620002dc565b9050919050565b60006200031d82620002fc565b9050919050565b6200032f8162000310565b81146200033b57600080fd5b50565b6000815190506200034f8162000324565b92915050565b60006200036282620002fc565b9050919050565b620003748162000355565b81146200038057600080fd5b50565b600081519050620003948162000369565b92915050565b60008060408385031215620003b457620003b3620002d7565b5b6000620003c4858286016200033e565b9250506020620003d78582860162000383565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a0516119ee62000475600039600081816102690152818161071e015281816107e80152610aa201526000818161028d01528181610307015281816104f5015281816105d301528181610b5701528181610c0c0152610cff01526119ee6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806383f465701161007157806383f465701461018f57806399802864146101bf578063a83622e0146101dd578063bef20e6b146101fb578063c75b44d414610219578063fb86af4c14610249576100b4565b806305f197aa146100b957806310987683146100d75780632bcc10bc146100f55780635226dc9314610125578063540fda301461014157806373f239af1461015f575b600080fd5b6100c1610267565b6040516100ce9190611246565b60405180910390f35b6100df61028b565b6040516100ec9190611282565b60405180910390f35b61010f600480360381019061010a91906112d1565b6102af565b60405161011c9190611317565b60405180910390f35b61013f600480360381019061013a919061135e565b6102c7565b005b610149610ca0565b6040516101569190611317565b60405180910390f35b6101796004803603810190610174919061135e565b610cbd565b6040516101869190611317565b60405180910390f35b6101a960048036038101906101a4919061139e565b610faa565b6040516101b69190611317565b60405180910390f35b6101c761113d565b6040516101d49190611317565b60405180910390f35b6101e5611142565b6040516101f29190611317565b60405180910390f35b610203611147565b6040516102109190611317565b60405180910390f35b610233600480360381019061022e919061139e565b61114d565b6040516102409190611317565b60405180910390f35b6102516111bf565b60405161025e9190611317565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528060005260406000206000915090505481565b6102db6779e66157d577fb6560c01b6111c4565b6102ef67da8498baa7b3b15260c01b6111c4565b61030367fd927e6e6af289ad60c01b6111c4565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e3684e39846040518263ffffffff1660e01b815260040161035e9190611317565b60a060405180830381865afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190611512565b90506103b5671e25386e1bef9ab860c01b6111c4565b6103c9677d443eb325022ee360c01b6111c4565b60008282604001516103db919061156e565b90506103f16739c945737043e0ff60c01b6111c4565b610405674cbf3cfccffa321f60c01b6111c4565b600061041b67bf1ad1dced3ebadc60c01b6111c4565b61042f67b6f7af210c8c993560c01b6111c4565b6000610445671c65975ace0e3f0e60c01b6111c4565b61045967c308b4b49ab0d49b60c01b6111c4565b6000600190505b8581116104b35761047b6763fafa310df0fce960c01b6111c4565b61049381866040015161048e919061156e565b610faa565b8261049e919061156e565b915080806104ab906115a2565b915050610460565b506104c867fd812f4f43aa4e1c60c01b6111c4565b6104dc678cd6501724342a6e60c01b6111c4565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e886040518263ffffffff1660e01b815260040161054c9190611317565b602060405180830381865afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190611628565b73ffffffffffffffffffffffffffffffffffffffff16146106aa576105bc67a1624df58d43f22e60c01b6111c4565b6105d067351240bc8ad22cf560c01b6111c4565b857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e886040518263ffffffff1660e01b815260040161062a9190611317565b602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190611628565b336040517f4bdd6e630000000000000000000000000000000000000000000000000000000081526004016106a193929190611664565b60405180910390fd5b6106be67ea3f62a0be9b89dd60c01b6111c4565b6106d267ff87a1a2464606db60c01b6111c4565b6106e6670362959ff384505460c01b6111c4565b60006106f28787610cbd565b90506107086739f0b029cbc38ba660c01b6111c4565b61071c67ed8c539d510e4d1160c01b6111c4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610775919061169b565b602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b691906116b6565b8111156108bd576107d167e25948984dde432060c01b6111c4565b6107e567fcbaaddb0abdc60d60c01b6111c4565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161083f919061169b565b602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088091906116b6565b6040517fa59337770000000000000000000000000000000000000000000000000000000081526004016108b49291906116e3565b60405180910390fd5b6108d167feec0a195884b1ea60c01b6111c4565b6108e5672109e88ec29eb9e660c01b6111c4565b6108f96719047419ba5ed8d460c01b6111c4565b600080866000015160048111156109135761091261170c565b5b60048111156109255761092461170c565b5b8152602001908152602001600020548411156109dc5761094f677b01c0354276bc8a60c01b6111c4565b610963677d216fec76a9f67960c01b6111c4565b866000808760000151600481111561097e5761097d61170c565b5b60048111156109905761098f61170c565b5b8152602001908152602001600020546040517feb365bdc0000000000000000000000000000000000000000000000000000000081526004016109d39291906116e3565b60405180910390fd5b6109f067819e023b65382c6060c01b6111c4565b610a04672821714584c8f97260c01b6111c4565b610a18672b0ef1bf1a12143c60c01b6111c4565b8185606001511115610a6357610a38676efd120a074d49b760c01b6111c4565b610a4c6757d590228604e81f60c01b6111c4565b818560600151610a5c919061173b565b9250610a78565b610a7767946c5f25fd62a33f60c01b6111c4565b5b610a8c67ffcdf18863214e0060c01b6111c4565b610aa0672952a5d9aa85111760c01b6111c4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b8152600401610afb92919061176f565b600060405180830381600087803b158015610b1557600080fd5b505af1158015610b29573d6000803e3d6000fd5b50505050610b41671d563bec87b6aad060c01b6111c4565b610b5567dd48aceeb5ba07de60c01b6111c4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b7cf12cf88856040518363ffffffff1660e01b8152600401610bb09291906116e3565b600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b50505050610bf667966b99044a3ccd3b60c01b6111c4565b610c0a67dc2e9df86c7dd29360c01b6111c4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a93b3688866040518363ffffffff1660e01b8152600401610c659291906116e3565b600060405180830381600087803b158015610c7f57600080fd5b505af1158015610c93573d6000803e3d6000fd5b5050505050505050505050565b6012600a610cae91906118cb565b603c610cba9190611916565b81565b6000610cd367f32627bc77d6f0c060c01b6111c4565b610ce767581ff3a663f55af260c01b6111c4565b610cfb67040d76e5fa8ec56260c01b6111c4565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e3684e39856040518263ffffffff1660e01b8152600401610d569190611317565b60a060405180830381865afa158015610d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d979190611512565b9050610dad679e3af5aa662ee22260c01b6111c4565b610dc167c003e8180bb9e23360c01b6111c4565b6000610dd76731d45faa55146c4f60c01b6111c4565b610deb67e1b180c05724b20c60c01b6111c4565b6000610e0167364e9c789d1e7b6a60c01b6111c4565b610e15677733a3c97440053760c01b6111c4565b6000600190505b858111610ea857610e37679ee309baf2d5eed760c01b6111c4565b610e4f818560400151610e4a919061156e565b610faa565b83610e5a919061156e565b9250610e706772fad4e3effc784a60c01b6111c4565b610e88818560400151610e83919061156e565b61114d565b82610e93919061156e565b91508080610ea0906115a2565b915050610e1c565b50610ebd67187c2e53a3468f2560c01b6111c4565b610ed1670e171afaf8abbb2f60c01b6111c4565b82606001518211610f2357610ef0678f308de18b08cea160c01b6111c4565b610f046743c804df96af4ac060c01b6111c4565b610f186785d16b42ee7b021960c01b6111c4565b809350505050610fa4565b610f376756c9f1a57cb1859160c01b6111c4565b610f4b67afba7471696cafd060c01b6111c4565b610f5f678dde3a5fe81cc7e360c01b6111c4565b6003600a610f6d91906118cb565b605a846060015184610f7f919061173b565b610f899190611916565b610f939190611987565b81610f9e919061156e565b93505050505b92915050565b6000610fc0679954fcfe4278dc5760c01b6111c4565b610fd46723e9bb5f2c838bc460c01b6111c4565b610fe86776693ab046c49bd360c01b6111c4565b600082036110355761100467df12aeb5e7c0616060c01b6111c4565b61101867c449a9e2d555b20560c01b6111c4565b61102c677456491b87742bc560c01b6111c4565b60009050611138565b611049670f7002e20837a39460c01b6111c4565b61105d67ca612f88dd43561460c01b6111c4565b611071675c9d02456b7842e260c01b6111c4565b60006012600a61108191906118cb565b603c61108d9190611916565b90506110a367481a65167e4c752a60c01b6111c4565b6110b767149f820599df335660c01b6111c4565b6000600190505b8381101561110a576110da678351d4855f74cd2360c01b6111c4565b6103e861043d836110eb9190611916565b6110f59190611987565b91508080611102906115a2565b9150506110be565b5061111f679b28529e524ae4d160c01b6111c4565b611133678c09ec96140d2a7c60c01b6111c4565b809150505b919050565b601281565b600381565b61043d81565b6000611163677d68e63bcda16ae660c01b6111c4565b61117767459d115a1574d80960c01b6111c4565b61118b673ae37acf959ce96760c01b6111c4565b6003600a61119991906118cb565b605a6111a484610faa565b6111ae9190611916565b6111b89190611987565b9050919050565b605a81565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061120c611207611202846111c7565b6111e7565b6111c7565b9050919050565b600061121e826111f1565b9050919050565b600061123082611213565b9050919050565b61124081611225565b82525050565b600060208201905061125b6000830184611237565b92915050565b600061126c82611213565b9050919050565b61127c81611261565b82525050565b60006020820190506112976000830184611273565b92915050565b6000604051905090565b600080fd5b600581106112b957600080fd5b50565b6000813590506112cb816112ac565b92915050565b6000602082840312156112e7576112e66112a7565b5b60006112f5848285016112bc565b91505092915050565b6000819050919050565b611311816112fe565b82525050565b600060208201905061132c6000830184611308565b92915050565b61133b816112fe565b811461134657600080fd5b50565b60008135905061135881611332565b92915050565b60008060408385031215611375576113746112a7565b5b600061138385828601611349565b925050602061139485828601611349565b9150509250929050565b6000602082840312156113b4576113b36112a7565b5b60006113c284828501611349565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611419826113d0565b810181811067ffffffffffffffff82111715611438576114376113e1565b5b80604052505050565b600061144b61129d565b90506114578282611410565b919050565b60008151905061146b816112ac565b92915050565b60008151905061148081611332565b92915050565b600060a0828403121561149c5761149b6113cb565b5b6114a660a0611441565b905060006114b68482850161145c565b60008301525060206114ca84828501611471565b60208301525060406114de84828501611471565b60408301525060606114f284828501611471565b606083015250608061150684828501611471565b60808301525092915050565b600060a08284031215611528576115276112a7565b5b600061153684828501611486565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611579826112fe565b9150611584836112fe565b925082820190508082111561159c5761159b61153f565b5b92915050565b60006115ad826112fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115df576115de61153f565b5b600182019050919050565b60006115f5826111c7565b9050919050565b611605816115ea565b811461161057600080fd5b50565b600081519050611622816115fc565b92915050565b60006020828403121561163e5761163d6112a7565b5b600061164c84828501611613565b91505092915050565b61165e816115ea565b82525050565b60006060820190506116796000830186611308565b6116866020830185611655565b6116936040830184611655565b949350505050565b60006020820190506116b06000830184611655565b92915050565b6000602082840312156116cc576116cb6112a7565b5b60006116da84828501611471565b91505092915050565b60006040820190506116f86000830185611308565b6117056020830184611308565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000611746826112fe565b9150611751836112fe565b92508282039050818111156117695761176861153f565b5b92915050565b60006040820190506117846000830185611655565b6117916020830184611308565b9392505050565b60008160011c9050919050565b6000808291508390505b60018511156117ef578086048111156117cb576117ca61153f565b5b60018516156117da5780820291505b80810290506117e885611798565b94506117af565b94509492505050565b60008261180857600190506118c4565b8161181657600090506118c4565b816001811461182c576002811461183657611865565b60019150506118c4565b60ff8411156118485761184761153f565b5b8360020a91508482111561185f5761185e61153f565b5b506118c4565b5060208310610133831016604e8410600b841016171561189a5782820a9050838111156118955761189461153f565b5b6118c4565b6118a784848460016117a5565b925090508184048111156118be576118bd61153f565b5b81810290505b9392505050565b60006118d6826112fe565b91506118e1836112fe565b925061190e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846117f8565b905092915050565b6000611921826112fe565b915061192c836112fe565b925082820261193a816112fe565b915082820484148315176119515761195061153f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611992826112fe565b915061199d836112fe565b9250826119ad576119ac611958565b5b82820490509291505056fea264697066735822122063afa4291558b12c995b670d632fbae9677aea76d642284c8879c4e753c7d1a664736f6c63430008110033";

type LevelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LevelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Level__factory extends ContractFactory {
  constructor(...args: LevelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pok: PromiseOrValue<string>,
    _pookyball: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Level> {
    return super.deploy(_pok, _pookyball, overrides || {}) as Promise<Level>;
  }
  override getDeployTransaction(
    _pok: PromiseOrValue<string>,
    _pookyball: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pok, _pookyball, overrides || {});
  }
  override attach(address: string): Level {
    return super.attach(address) as Level;
  }
  override connect(signer: Signer): Level__factory {
    return super.connect(signer) as Level__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LevelInterface {
    return new utils.Interface(_abi) as LevelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Level {
    return new Contract(address, _abi, signerOrProvider) as Level;
  }
}
