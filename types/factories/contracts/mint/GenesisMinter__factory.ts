/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GenesisMinter,
  GenesisMinterInterface,
  TemplateStruct,
} from "../../../contracts/mint/GenesisMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPookyball",
        name: "_pookyball",
        type: "address",
      },
      {
        internalType: "contract IWaitList",
        name: "_waitlist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum PookyballRarity",
            name: "rarity",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "luxury",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Template[]",
        name: "_templates",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "NotEligible",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "SoldOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pookyball",
    outputs: [
      {
        internalType: "contract IPookyball",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "templates",
    outputs: [
      {
        internalType: "enum PookyballRarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "luxury",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "waitlist",
    outputs: [
      {
        internalType: "contract IWaitList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620015a9380380620015a98339818101604052810190620000379190620005e8565b6200005367d72b0282f4de007960c01b6200026a60201b60201c565b6200006e66ec2220b969ce3b60c01b6200026a60201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000be6784d9aef398e490da60c01b6200026a60201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250506200010e67d3e62b704dd3e90960c01b6200026a60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506200015e6796601ac2f27177df60c01b6200026a60201b60201c565b6200017a679b65770141406d4660c01b6200026a60201b60201c565b60005b81518110156200025f57620001a367674b08bbb7cdb30160c01b6200026a60201b60201c565b818181518110620001b957620001b862000679565b5b602002602001015160016000806000815480929190620001d990620006d7565b91905055815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600481111562000219576200021862000724565b5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015590505080806200025690620006d7565b9150506200017d565b505050505062000753565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002ae8262000281565b9050919050565b6000620002c282620002a1565b9050919050565b620002d481620002b5565b8114620002e057600080fd5b50565b600081519050620002f481620002c9565b92915050565b60006200030782620002a1565b9050919050565b6200031981620002fa565b81146200032557600080fd5b50565b60008151905062000339816200030e565b92915050565b6200034a81620002a1565b81146200035657600080fd5b50565b6000815190506200036a816200033f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c08262000375565b810181811067ffffffffffffffff82111715620003e257620003e162000386565b5b80604052505050565b6000620003f76200026d565b9050620004058282620003b5565b919050565b600067ffffffffffffffff82111562000428576200042762000386565b5b602082029050602081019050919050565b600080fd5b600080fd5b600581106200045157600080fd5b50565b600081519050620004658162000443565b92915050565b6000819050919050565b62000480816200046b565b81146200048c57600080fd5b50565b600081519050620004a08162000475565b92915050565b600060a08284031215620004bf57620004be6200043e565b5b620004cb60a0620003eb565b90506000620004dd8482850162000454565b6000830152506020620004f3848285016200048f565b602083015250604062000509848285016200048f565b60408301525060606200051f848285016200048f565b606083015250608062000535848285016200048f565b60808301525092915050565b60006200055862000552846200040a565b620003eb565b90508083825260208201905060a084028301858111156200057e576200057d62000439565b5b835b81811015620005ab5780620005968882620004a6565b84526020840193505060a08101905062000580565b5050509392505050565b600082601f830112620005cd57620005cc62000370565b5b8151620005df84826020860162000541565b91505092915050565b6000806000806080858703121562000605576200060462000277565b5b60006200061587828801620002e3565b9450506020620006288782880162000328565b93505060406200063b8782880162000359565b925050606085015167ffffffffffffffff8111156200065f576200065e6200027c565b5b6200066d87828801620005b5565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006e4826200046b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007195762000718620006a8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c051610e12620007976000396000818161011d015261017d01526000818161065e015261073c01526000818160f901526105360152610e126000f3fe60806040526004361061003f5760003560e01c80631098768314610044578063343f39291461006f578063836a10401461009a578063bc525652146100b6575b600080fd5b34801561005057600080fd5b506100596100f7565b60405161006691906108f2565b60405180910390f35b34801561007b57600080fd5b5061008461011b565b604051610091919061092e565b60405180910390f35b6100b460048036038101906100af91906109c2565b61013f565b005b3480156100c257600080fd5b506100dd60048036038101906100d89190610a15565b61082d565b6040516100ee959493929190610ac8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61015367755b61538339a68c60c01b610870565b610167674556d89c3272300d60c01b610870565b61017b67587475af65c7ea1360c01b610870565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166366e305fd836040518263ffffffff1660e01b81526004016101d49190610b2a565b602060405180830381865afa1580156101f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102159190610b7d565b61027e5761022d67864a968413c3a67060c01b610870565b61024167d066b8074a497acc60c01b610870565b816040517f3a1c15450000000000000000000000000000000000000000000000000000000081526004016102759190610b2a565b60405180910390fd5b61029267543b483acee3e8fb60c01b610870565b6102a66757a80f42f1c2e6b360c01b610870565b6102ba6792f5187c694c98f760c01b610870565b6000600160008581526020019081526020016000206040518060a00160405290816000820160009054906101000a900460ff1660048111156102ff576102fe610a42565b5b600481111561031157610310610a42565b5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050610353675290f6ac3733795760c01b610870565b61036767d87b414841a68fb460c01b610870565b806040015182826060015161037c9190610bd9565b11156103fc57610396679fd96bf9653dde2a60c01b610870565b6103aa672e9343b7d488cc9660c01b610870565b83816060015182604001516103bf9190610c0d565b6040517f95d246db0000000000000000000000000000000000000000000000000000000081526004016103f3929190610c41565b60405180910390fd5b610410670cc187932861cbcc60c01b610870565b610424674a14b704f5430b0460c01b610870565b61043867fdbf4f6d801ac0a760c01b610870565b8060800151826104489190610c6a565b3410156104c557610463674a484ef0af7947ab60c01b610870565b6104776759dcb8e62e66dd5360c01b610870565b8060800151826104879190610c6a565b346040517f7040b58c0000000000000000000000000000000000000000000000000000000081526004016104bc929190610c41565b60405180910390fd5b6104d9679bf63ffef4c9313760c01b610870565b6104ed677089ef37fdc7fb9d60c01b610870565b61050167c1257b07c2a913d060c01b610870565b60005b828110156105f057610520678d2c6808e4738d8c60c01b610870565b61053467f3b0321721cc8e5160c01b610870565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634ed387b285846000015185602001516040518463ffffffff1660e01b815260040161059993929190610cac565b6020604051808303816000875af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610cf8565b5080806105e890610d25565b915050610504565b5061060567617a756387c660c860c01b610870565b8160016000868152602001908152602001600020600301600082825461062b9190610bd9565b925050819055506106466706e863e63b1d35e260c01b610870565b61065a677eb4c3fe25929a5960c01b610870565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16346040516106a090610d9e565b60006040518083038185875af1925050503d80600081146106dd576040519150601f19603f3d011682016040523d82523d6000602084013e6106e2565b606091505b505090506106f9661a1612eb8291a160c01b610870565b61070d674598dcaf702ea84e60c01b610870565b80610799576107266713750726c3386a5e60c01b610870565b61073a673fb12f83d4f5624060c01b610870565b7f0000000000000000000000000000000000000000000000000000000000000000346040517f1c43b976000000000000000000000000000000000000000000000000000000008152600401610790929190610db3565b60405180910390fd5b6107ad6771099fc600f3ceea60c01b610870565b6107c16797012e1deb2fc5c760c01b610870565b6107d567c654d827bddf53e660c01b610870565b848473ffffffffffffffffffffffffffffffffffffffff167f4e26b0356a15833a75d497ecc40ebbb716b99466ed0dba9454f1fff451e25a90853460405161081e929190610c41565b60405180910390a35050505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154905085565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108b86108b36108ae84610873565b610893565b610873565b9050919050565b60006108ca8261089d565b9050919050565b60006108dc826108bf565b9050919050565b6108ec816108d1565b82525050565b600060208201905061090760008301846108e3565b92915050565b6000610918826108bf565b9050919050565b6109288161090d565b82525050565b6000602082019050610943600083018461091f565b92915050565b600080fd5b6000819050919050565b6109618161094e565b811461096c57600080fd5b50565b60008135905061097e81610958565b92915050565b600061098f82610873565b9050919050565b61099f81610984565b81146109aa57600080fd5b50565b6000813590506109bc81610996565b92915050565b6000806000606084860312156109db576109da610949565b5b60006109e98682870161096f565b93505060206109fa868287016109ad565b9250506040610a0b8682870161096f565b9150509250925092565b600060208284031215610a2b57610a2a610949565b5b6000610a398482850161096f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610a8257610a81610a42565b5b50565b6000819050610a9382610a71565b919050565b6000610aa382610a85565b9050919050565b610ab381610a98565b82525050565b610ac28161094e565b82525050565b600060a082019050610add6000830188610aaa565b610aea6020830187610ab9565b610af76040830186610ab9565b610b046060830185610ab9565b610b116080830184610ab9565b9695505050505050565b610b2481610984565b82525050565b6000602082019050610b3f6000830184610b1b565b92915050565b60008115159050919050565b610b5a81610b45565b8114610b6557600080fd5b50565b600081519050610b7781610b51565b92915050565b600060208284031215610b9357610b92610949565b5b6000610ba184828501610b68565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610be48261094e565b9150610bef8361094e565b9250828201905080821115610c0757610c06610baa565b5b92915050565b6000610c188261094e565b9150610c238361094e565b9250828203905081811115610c3b57610c3a610baa565b5b92915050565b6000604082019050610c566000830185610ab9565b610c636020830184610ab9565b9392505050565b6000610c758261094e565b9150610c808361094e565b9250828202610c8e8161094e565b91508282048414831517610ca557610ca4610baa565b5b5092915050565b6000606082019050610cc16000830186610b1b565b610cce6020830185610aaa565b610cdb6040830184610ab9565b949350505050565b600081519050610cf281610958565b92915050565b600060208284031215610d0e57610d0d610949565b5b6000610d1c84828501610ce3565b91505092915050565b6000610d308261094e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6257610d61610baa565b5b600182019050919050565b600081905092915050565b50565b6000610d88600083610d6d565b9150610d9382610d78565b600082019050919050565b6000610da982610d7b565b9150819050919050565b6000604082019050610dc86000830185610b1b565b610dd56020830184610ab9565b939250505056fea2646970667358221220b2658ebe7057e42532845c89f2fa1432a5cc2f91669970da394a067a9ee0e1d764736f6c63430008110033";

type GenesisMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenesisMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenesisMinter__factory extends ContractFactory {
  constructor(...args: GenesisMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pookyball: PromiseOrValue<string>,
    _waitlist: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _templates: TemplateStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenesisMinter> {
    return super.deploy(
      _pookyball,
      _waitlist,
      _treasury,
      _templates,
      overrides || {}
    ) as Promise<GenesisMinter>;
  }
  override getDeployTransaction(
    _pookyball: PromiseOrValue<string>,
    _waitlist: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _templates: TemplateStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pookyball,
      _waitlist,
      _treasury,
      _templates,
      overrides || {}
    );
  }
  override attach(address: string): GenesisMinter {
    return super.attach(address) as GenesisMinter;
  }
  override connect(signer: Signer): GenesisMinter__factory {
    return super.connect(signer) as GenesisMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenesisMinterInterface {
    return new utils.Interface(_abi) as GenesisMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenesisMinter {
    return new Contract(address, _abi, signerOrProvider) as GenesisMinter;
  }
}
