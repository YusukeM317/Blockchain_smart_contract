/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GenesisMinter,
  GenesisMinterInterface,
  TemplateStruct,
} from "../../../contracts/mint/GenesisMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPookyball",
        name: "_pookyball",
        type: "address",
      },
      {
        internalType: "contract IWaitList",
        name: "_waitlist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum PookyballRarity",
            name: "rarity",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "luxury",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Template[]",
        name: "_templates",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Ineligible",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "InsufficientSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "ineligibilityReason",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTemplateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pookyball",
    outputs: [
      {
        internalType: "contract IPookyball",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "templates",
    outputs: [
      {
        internalType: "enum PookyballRarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "luxury",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "waitlist",
    outputs: [
      {
        internalType: "contract IWaitList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200199f3803806200199f8339818101604052810190620000379190620005e7565b620000536780083cbead5aa90360c01b6200026960201b60201c565b6200006f67ea7a65bf5ea1dd2560c01b6200026960201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000bf6765a3cc9e849ff2cd60c01b6200026960201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250506200010f67e5c4f211abec338660c01b6200026960201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506200015f673ebecd63330adb7a60c01b6200026960201b60201c565b6200017b67dbd305f38e25707860c01b6200026960201b60201c565b60005b81518110156200025e57620001a4674df53c4b56e8ee2f60c01b6200026960201b60201c565b818181518110620001ba57620001b962000678565b5b6020026020010151600160008060008154620001d690620006d6565b919050819055815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600481111562000218576200021762000723565b5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015590505080806200025590620006d6565b9150506200017e565b505050505062000752565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002ad8262000280565b9050919050565b6000620002c182620002a0565b9050919050565b620002d381620002b4565b8114620002df57600080fd5b50565b600081519050620002f381620002c8565b92915050565b60006200030682620002a0565b9050919050565b6200031881620002f9565b81146200032457600080fd5b50565b60008151905062000338816200030d565b92915050565b6200034981620002a0565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003bf8262000374565b810181811067ffffffffffffffff82111715620003e157620003e062000385565b5b80604052505050565b6000620003f66200026c565b9050620004048282620003b4565b919050565b600067ffffffffffffffff82111562000427576200042662000385565b5b602082029050602081019050919050565b600080fd5b600080fd5b600581106200045057600080fd5b50565b600081519050620004648162000442565b92915050565b6000819050919050565b6200047f816200046a565b81146200048b57600080fd5b50565b6000815190506200049f8162000474565b92915050565b600060a08284031215620004be57620004bd6200043d565b5b620004ca60a0620003ea565b90506000620004dc8482850162000453565b6000830152506020620004f2848285016200048e565b602083015250604062000508848285016200048e565b60408301525060606200051e848285016200048e565b606083015250608062000534848285016200048e565b60808301525092915050565b600062000557620005518462000409565b620003ea565b90508083825260208201905060a084028301858111156200057d576200057c62000438565b5b835b81811015620005aa5780620005958882620004a5565b84526020840193505060a0810190506200057f565b5050509392505050565b600082601f830112620005cc57620005cb6200036f565b5b8151620005de84826020860162000540565b91505092915050565b6000806000806080858703121562000604576200060362000276565b5b60006200061487828801620002e2565b9450506020620006278782880162000327565b93505060406200063a8782880162000358565b925050606085015167ffffffffffffffff8111156200065e576200065d6200027b565b5b6200066c87828801620005b4565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006e3826200046a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007185762000717620006a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c0516112016200079e6000396000818161019b015281816101fb015261092e0152600081816106db01526107ba01526000818161017701526105b301526112016000f3fe6080604052600436106100555760003560e01c8063109876831461005a578063343f392914610085578063836a1040146100b0578063bc525652146100cc578063c2c2203d1461010d578063c4972da21461014a575b600080fd5b34801561006657600080fd5b5061006f610175565b60405161007c9190610c14565b60405180910390f35b34801561009157600080fd5b5061009a610199565b6040516100a79190610c50565b60405180910390f35b6100ca60048036038101906100c59190610ce4565b6101bd565b005b3480156100d857600080fd5b506100f360048036038101906100ee9190610d37565b6108ab565b604051610104959493929190610dea565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190610ce4565b6108ee565b6040516101419190610ecd565b60405180910390f35b34801561015657600080fd5b5061015f610b8c565b60405161016c9190610eef565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6101d1675bca4252c32213e160c01b610b92565b6101e56734292a7e39d7411c60c01b610b92565b6101f967219aba27b9cedfd060c01b610b92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166366e305fd836040518263ffffffff1660e01b81526004016102529190610f19565b602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102939190610f6c565b6102fc576102ab67ce05f9ee3b9cb6fc60c01b610b92565b6102bf67580a1e0821bff5a860c01b610b92565b816040517f90b016940000000000000000000000000000000000000000000000000000000081526004016102f39190610f19565b60405180910390fd5b610310674f0a79602398020960c01b610b92565b61032467d52118e79fc4bf1c60c01b610b92565b610338671186a5c4a093224d60c01b610b92565b6000600160008581526020019081526020016000206040518060a00160405290816000820160009054906101000a900460ff16600481111561037d5761037c610d64565b5b600481111561038f5761038e610d64565b5b815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506103d167d72b0282f4de007960c01b610b92565b6103e466ec2220b969ce3b60c01b610b92565b80604001518282606001516103f99190610fc8565b1115610479576104136784d9aef398e490da60c01b610b92565b61042767d3e62b704dd3e90960c01b610b92565b838160600151826040015161043c9190610ffc565b6040517f9e4c4461000000000000000000000000000000000000000000000000000000008152600401610470929190611030565b60405180910390fd5b61048d6796601ac2f27177df60c01b610b92565b6104a1679b65770141406d4660c01b610b92565b6104b567674b08bbb7cdb30160c01b610b92565b8060800151826104c59190611059565b341015610542576104e067755b61538339a68c60c01b610b92565b6104f4674556d89c3272300d60c01b610b92565b8060800151826105049190611059565b346040517f7040b58c000000000000000000000000000000000000000000000000000000008152600401610539929190611030565b60405180910390fd5b61055667587475af65c7ea1360c01b610b92565b61056a67864a968413c3a67060c01b610b92565b61057e67d066b8074a497acc60c01b610b92565b60005b8281101561066d5761059d67543b483acee3e8fb60c01b610b92565b6105b16757a80f42f1c2e6b360c01b610b92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634ed387b285846000015185602001516040518463ffffffff1660e01b81526004016106169392919061109b565b6020604051808303816000875af1158015610635573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065991906110e7565b50808061066590611114565b915050610581565b506106826792f5187c694c98f760c01b610b92565b816001600086815260200190815260200160002060030160008282546106a89190610fc8565b925050819055506106c3675290f6ac3733795760c01b610b92565b6106d767d87b414841a68fb460c01b610b92565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163460405161071d9061118d565b60006040518083038185875af1925050503d806000811461075a576040519150601f19603f3d011682016040523d82523d6000602084013e61075f565b606091505b50509050610777679fd96bf9653dde2a60c01b610b92565b61078b672e9343b7d488cc9660c01b610b92565b80610817576107a4670cc187932861cbcc60c01b610b92565b6107b8674a14b704f5430b0460c01b610b92565b7f0000000000000000000000000000000000000000000000000000000000000000346040517f1c43b97600000000000000000000000000000000000000000000000000000000815260040161080e9291906111a2565b60405180910390fd5b61082b67fdbf4f6d801ac0a760c01b610b92565b61083f674a484ef0af7947ab60c01b610b92565b6108536759dcb8e62e66dd5360c01b610b92565b848473ffffffffffffffffffffffffffffffffffffffff167f4e26b0356a15833a75d497ecc40ebbb716b99466ed0dba9454f1fff451e25a90853460405161089c929190611030565b60405180910390a35050505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154905085565b6060610904679bf63ffef4c9313760c01b610b92565b610918677089ef37fdc7fb9d60c01b610b92565b61092c67c1257b07c2a913d060c01b610b92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166366e305fd846040518263ffffffff1660e01b81526004016109859190610f19565b602060405180830381865afa1580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c69190610f6c565b610a43576109de678d2c6808e4738d8c60c01b610b92565b6109f267f3b0321721cc8e5160c01b610b92565b610a0667617a756387c660c860c01b610b92565b6040518060400160405280601081526020017f6e6f7420656c696769626c6520796574000000000000000000000000000000008152509050610b85565b610a576706e863e63b1d35e260c01b610b92565b610a6b677eb4c3fe25929a5960c01b610b92565b610a7e661a1612eb8291a160c01b610b92565b6001600085815260200190815260200160002060020154826001600087815260200190815260200160002060030154610ab79190610fc8565b1115610b3657610ad1674598dcaf702ea84e60c01b610b92565b610ae56713750726c3386a5e60c01b610b92565b610af9673fb12f83d4f5624060c01b610b92565b6040518060400160405280601381526020017f696e73756666696369656e7420737570706c79000000000000000000000000008152509050610b85565b610b4a6771099fc600f3ceea60c01b610b92565b610b5e6797012e1deb2fc5c760c01b610b92565b610b7267c654d827bddf53e660c01b610b92565b6040518060200160405280600081525090505b9392505050565b60005481565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bda610bd5610bd084610b95565b610bb5565b610b95565b9050919050565b6000610bec82610bbf565b9050919050565b6000610bfe82610be1565b9050919050565b610c0e81610bf3565b82525050565b6000602082019050610c296000830184610c05565b92915050565b6000610c3a82610be1565b9050919050565b610c4a81610c2f565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600080fd5b6000819050919050565b610c8381610c70565b8114610c8e57600080fd5b50565b600081359050610ca081610c7a565b92915050565b6000610cb182610b95565b9050919050565b610cc181610ca6565b8114610ccc57600080fd5b50565b600081359050610cde81610cb8565b92915050565b600080600060608486031215610cfd57610cfc610c6b565b5b6000610d0b86828701610c91565b9350506020610d1c86828701610ccf565b9250506040610d2d86828701610c91565b9150509250925092565b600060208284031215610d4d57610d4c610c6b565b5b6000610d5b84828501610c91565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610da457610da3610d64565b5b50565b6000819050610db582610d93565b919050565b6000610dc582610da7565b9050919050565b610dd581610dba565b82525050565b610de481610c70565b82525050565b600060a082019050610dff6000830188610dcc565b610e0c6020830187610ddb565b610e196040830186610ddb565b610e266060830185610ddb565b610e336080830184610ddb565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e77578082015181840152602081019050610e5c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e9f82610e3d565b610ea98185610e48565b9350610eb9818560208601610e59565b610ec281610e83565b840191505092915050565b60006020820190508181036000830152610ee78184610e94565b905092915050565b6000602082019050610f046000830184610ddb565b92915050565b610f1381610ca6565b82525050565b6000602082019050610f2e6000830184610f0a565b92915050565b60008115159050919050565b610f4981610f34565b8114610f5457600080fd5b50565b600081519050610f6681610f40565b92915050565b600060208284031215610f8257610f81610c6b565b5b6000610f9084828501610f57565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd382610c70565b9150610fde83610c70565b9250828201905080821115610ff657610ff5610f99565b5b92915050565b600061100782610c70565b915061101283610c70565b925082820390508181111561102a57611029610f99565b5b92915050565b60006040820190506110456000830185610ddb565b6110526020830184610ddb565b9392505050565b600061106482610c70565b915061106f83610c70565b925082820261107d81610c70565b9150828204841483151761109457611093610f99565b5b5092915050565b60006060820190506110b06000830186610f0a565b6110bd6020830185610dcc565b6110ca6040830184610ddb565b949350505050565b6000815190506110e181610c7a565b92915050565b6000602082840312156110fd576110fc610c6b565b5b600061110b848285016110d2565b91505092915050565b600061111f82610c70565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361115157611150610f99565b5b600182019050919050565b600081905092915050565b50565b600061117760008361115c565b915061118282611167565b600082019050919050565b60006111988261116a565b9150819050919050565b60006040820190506111b76000830185610f0a565b6111c46020830184610ddb565b939250505056fea264697066735822122082bc325bc5e1eb2ea2393d053251eedea4c720947887ba61659d6ebf96152d6e64736f6c63430008110033";

type GenesisMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenesisMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenesisMinter__factory extends ContractFactory {
  constructor(...args: GenesisMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pookyball: PromiseOrValue<string>,
    _waitlist: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _templates: TemplateStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenesisMinter> {
    return super.deploy(
      _pookyball,
      _waitlist,
      _treasury,
      _templates,
      overrides || {}
    ) as Promise<GenesisMinter>;
  }
  override getDeployTransaction(
    _pookyball: PromiseOrValue<string>,
    _waitlist: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _templates: TemplateStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pookyball,
      _waitlist,
      _treasury,
      _templates,
      overrides || {}
    );
  }
  override attach(address: string): GenesisMinter {
    return super.attach(address) as GenesisMinter;
  }
  override connect(signer: Signer): GenesisMinter__factory {
    return super.connect(signer) as GenesisMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenesisMinterInterface {
    return new utils.Interface(_abi) as GenesisMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenesisMinter {
    return new Contract(address, _abi, signerOrProvider) as GenesisMinter;
  }
}
